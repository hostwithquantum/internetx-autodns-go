// Code generated by go-swagger; DO NOT EDIT.

package contact_document_tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewContactDocumentInfoParams creates a new ContactDocumentInfoParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewContactDocumentInfoParams() *ContactDocumentInfoParams {
	return &ContactDocumentInfoParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewContactDocumentInfoParamsWithTimeout creates a new ContactDocumentInfoParams object
// with the ability to set a timeout on a request.
func NewContactDocumentInfoParamsWithTimeout(timeout time.Duration) *ContactDocumentInfoParams {
	return &ContactDocumentInfoParams{
		timeout: timeout,
	}
}

// NewContactDocumentInfoParamsWithContext creates a new ContactDocumentInfoParams object
// with the ability to set a context for a request.
func NewContactDocumentInfoParamsWithContext(ctx context.Context) *ContactDocumentInfoParams {
	return &ContactDocumentInfoParams{
		Context: ctx,
	}
}

// NewContactDocumentInfoParamsWithHTTPClient creates a new ContactDocumentInfoParams object
// with the ability to set a custom HTTPClient for a request.
func NewContactDocumentInfoParamsWithHTTPClient(client *http.Client) *ContactDocumentInfoParams {
	return &ContactDocumentInfoParams{
		HTTPClient: client,
	}
}

/*
ContactDocumentInfoParams contains all the parameters to send to the API endpoint

	for the contact document info operation.

	Typically these are written to a http.Request.
*/
type ContactDocumentInfoParams struct {

	// XDomainrobot2FAToken.
	//
	// Format: int32
	XDomainrobot2FAToken *int32

	// XDomainrobotBulkLimit.
	//
	// Format: int32
	XDomainrobotBulkLimit *int32

	// XDomainrobotContext.
	//
	// Format: int32
	XDomainrobotContext *int32

	// XDomainrobotDemo.
	XDomainrobotDemo *bool

	// XDomainrobotDomainSafePin.
	XDomainrobotDomainSafePin *string

	// XDomainrobotDomainSafeTan.
	XDomainrobotDomainSafeTan *string

	// XDomainrobotDomainSafeTransaction.
	XDomainrobotDomainSafeTransaction *string

	// XDomainrobotDomainSafeTransactionExpire.
	//
	// Format: date-time
	XDomainrobotDomainSafeTransactionExpire *strfmt.DateTime

	// XDomainrobotOwnerContext.
	//
	// Format: int32
	XDomainrobotOwnerContext *int32

	// XDomainrobotOwnerUser.
	XDomainrobotOwnerUser *string

	// XDomainrobotSessionID.
	XDomainrobotSessionID *string

	// XDomainrobotWS.
	XDomainrobotWS *string

	// ID.
	//
	// Format: int32
	ID int32

	/* Keys.

	   The query parameter to enable generate a download link.
	*/
	Keys []string

	// Type.
	Type string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the contact document info params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ContactDocumentInfoParams) WithDefaults() *ContactDocumentInfoParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the contact document info params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ContactDocumentInfoParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the contact document info params
func (o *ContactDocumentInfoParams) WithTimeout(timeout time.Duration) *ContactDocumentInfoParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the contact document info params
func (o *ContactDocumentInfoParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the contact document info params
func (o *ContactDocumentInfoParams) WithContext(ctx context.Context) *ContactDocumentInfoParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the contact document info params
func (o *ContactDocumentInfoParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the contact document info params
func (o *ContactDocumentInfoParams) WithHTTPClient(client *http.Client) *ContactDocumentInfoParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the contact document info params
func (o *ContactDocumentInfoParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXDomainrobot2FAToken adds the xDomainrobot2FAToken to the contact document info params
func (o *ContactDocumentInfoParams) WithXDomainrobot2FAToken(xDomainrobot2FAToken *int32) *ContactDocumentInfoParams {
	o.SetXDomainrobot2FAToken(xDomainrobot2FAToken)
	return o
}

// SetXDomainrobot2FAToken adds the xDomainrobot2FAToken to the contact document info params
func (o *ContactDocumentInfoParams) SetXDomainrobot2FAToken(xDomainrobot2FAToken *int32) {
	o.XDomainrobot2FAToken = xDomainrobot2FAToken
}

// WithXDomainrobotBulkLimit adds the xDomainrobotBulkLimit to the contact document info params
func (o *ContactDocumentInfoParams) WithXDomainrobotBulkLimit(xDomainrobotBulkLimit *int32) *ContactDocumentInfoParams {
	o.SetXDomainrobotBulkLimit(xDomainrobotBulkLimit)
	return o
}

// SetXDomainrobotBulkLimit adds the xDomainrobotBulkLimit to the contact document info params
func (o *ContactDocumentInfoParams) SetXDomainrobotBulkLimit(xDomainrobotBulkLimit *int32) {
	o.XDomainrobotBulkLimit = xDomainrobotBulkLimit
}

// WithXDomainrobotContext adds the xDomainrobotContext to the contact document info params
func (o *ContactDocumentInfoParams) WithXDomainrobotContext(xDomainrobotContext *int32) *ContactDocumentInfoParams {
	o.SetXDomainrobotContext(xDomainrobotContext)
	return o
}

// SetXDomainrobotContext adds the xDomainrobotContext to the contact document info params
func (o *ContactDocumentInfoParams) SetXDomainrobotContext(xDomainrobotContext *int32) {
	o.XDomainrobotContext = xDomainrobotContext
}

// WithXDomainrobotDemo adds the xDomainrobotDemo to the contact document info params
func (o *ContactDocumentInfoParams) WithXDomainrobotDemo(xDomainrobotDemo *bool) *ContactDocumentInfoParams {
	o.SetXDomainrobotDemo(xDomainrobotDemo)
	return o
}

// SetXDomainrobotDemo adds the xDomainrobotDemo to the contact document info params
func (o *ContactDocumentInfoParams) SetXDomainrobotDemo(xDomainrobotDemo *bool) {
	o.XDomainrobotDemo = xDomainrobotDemo
}

// WithXDomainrobotDomainSafePin adds the xDomainrobotDomainSafePin to the contact document info params
func (o *ContactDocumentInfoParams) WithXDomainrobotDomainSafePin(xDomainrobotDomainSafePin *string) *ContactDocumentInfoParams {
	o.SetXDomainrobotDomainSafePin(xDomainrobotDomainSafePin)
	return o
}

// SetXDomainrobotDomainSafePin adds the xDomainrobotDomainSafePin to the contact document info params
func (o *ContactDocumentInfoParams) SetXDomainrobotDomainSafePin(xDomainrobotDomainSafePin *string) {
	o.XDomainrobotDomainSafePin = xDomainrobotDomainSafePin
}

// WithXDomainrobotDomainSafeTan adds the xDomainrobotDomainSafeTan to the contact document info params
func (o *ContactDocumentInfoParams) WithXDomainrobotDomainSafeTan(xDomainrobotDomainSafeTan *string) *ContactDocumentInfoParams {
	o.SetXDomainrobotDomainSafeTan(xDomainrobotDomainSafeTan)
	return o
}

// SetXDomainrobotDomainSafeTan adds the xDomainrobotDomainSafeTan to the contact document info params
func (o *ContactDocumentInfoParams) SetXDomainrobotDomainSafeTan(xDomainrobotDomainSafeTan *string) {
	o.XDomainrobotDomainSafeTan = xDomainrobotDomainSafeTan
}

// WithXDomainrobotDomainSafeTransaction adds the xDomainrobotDomainSafeTransaction to the contact document info params
func (o *ContactDocumentInfoParams) WithXDomainrobotDomainSafeTransaction(xDomainrobotDomainSafeTransaction *string) *ContactDocumentInfoParams {
	o.SetXDomainrobotDomainSafeTransaction(xDomainrobotDomainSafeTransaction)
	return o
}

// SetXDomainrobotDomainSafeTransaction adds the xDomainrobotDomainSafeTransaction to the contact document info params
func (o *ContactDocumentInfoParams) SetXDomainrobotDomainSafeTransaction(xDomainrobotDomainSafeTransaction *string) {
	o.XDomainrobotDomainSafeTransaction = xDomainrobotDomainSafeTransaction
}

// WithXDomainrobotDomainSafeTransactionExpire adds the xDomainrobotDomainSafeTransactionExpire to the contact document info params
func (o *ContactDocumentInfoParams) WithXDomainrobotDomainSafeTransactionExpire(xDomainrobotDomainSafeTransactionExpire *strfmt.DateTime) *ContactDocumentInfoParams {
	o.SetXDomainrobotDomainSafeTransactionExpire(xDomainrobotDomainSafeTransactionExpire)
	return o
}

// SetXDomainrobotDomainSafeTransactionExpire adds the xDomainrobotDomainSafeTransactionExpire to the contact document info params
func (o *ContactDocumentInfoParams) SetXDomainrobotDomainSafeTransactionExpire(xDomainrobotDomainSafeTransactionExpire *strfmt.DateTime) {
	o.XDomainrobotDomainSafeTransactionExpire = xDomainrobotDomainSafeTransactionExpire
}

// WithXDomainrobotOwnerContext adds the xDomainrobotOwnerContext to the contact document info params
func (o *ContactDocumentInfoParams) WithXDomainrobotOwnerContext(xDomainrobotOwnerContext *int32) *ContactDocumentInfoParams {
	o.SetXDomainrobotOwnerContext(xDomainrobotOwnerContext)
	return o
}

// SetXDomainrobotOwnerContext adds the xDomainrobotOwnerContext to the contact document info params
func (o *ContactDocumentInfoParams) SetXDomainrobotOwnerContext(xDomainrobotOwnerContext *int32) {
	o.XDomainrobotOwnerContext = xDomainrobotOwnerContext
}

// WithXDomainrobotOwnerUser adds the xDomainrobotOwnerUser to the contact document info params
func (o *ContactDocumentInfoParams) WithXDomainrobotOwnerUser(xDomainrobotOwnerUser *string) *ContactDocumentInfoParams {
	o.SetXDomainrobotOwnerUser(xDomainrobotOwnerUser)
	return o
}

// SetXDomainrobotOwnerUser adds the xDomainrobotOwnerUser to the contact document info params
func (o *ContactDocumentInfoParams) SetXDomainrobotOwnerUser(xDomainrobotOwnerUser *string) {
	o.XDomainrobotOwnerUser = xDomainrobotOwnerUser
}

// WithXDomainrobotSessionID adds the xDomainrobotSessionID to the contact document info params
func (o *ContactDocumentInfoParams) WithXDomainrobotSessionID(xDomainrobotSessionID *string) *ContactDocumentInfoParams {
	o.SetXDomainrobotSessionID(xDomainrobotSessionID)
	return o
}

// SetXDomainrobotSessionID adds the xDomainrobotSessionId to the contact document info params
func (o *ContactDocumentInfoParams) SetXDomainrobotSessionID(xDomainrobotSessionID *string) {
	o.XDomainrobotSessionID = xDomainrobotSessionID
}

// WithXDomainrobotWS adds the xDomainrobotWS to the contact document info params
func (o *ContactDocumentInfoParams) WithXDomainrobotWS(xDomainrobotWS *string) *ContactDocumentInfoParams {
	o.SetXDomainrobotWS(xDomainrobotWS)
	return o
}

// SetXDomainrobotWS adds the xDomainrobotWS to the contact document info params
func (o *ContactDocumentInfoParams) SetXDomainrobotWS(xDomainrobotWS *string) {
	o.XDomainrobotWS = xDomainrobotWS
}

// WithID adds the id to the contact document info params
func (o *ContactDocumentInfoParams) WithID(id int32) *ContactDocumentInfoParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the contact document info params
func (o *ContactDocumentInfoParams) SetID(id int32) {
	o.ID = id
}

// WithKeys adds the keys to the contact document info params
func (o *ContactDocumentInfoParams) WithKeys(keys []string) *ContactDocumentInfoParams {
	o.SetKeys(keys)
	return o
}

// SetKeys adds the keys to the contact document info params
func (o *ContactDocumentInfoParams) SetKeys(keys []string) {
	o.Keys = keys
}

// WithType adds the typeVar to the contact document info params
func (o *ContactDocumentInfoParams) WithType(typeVar string) *ContactDocumentInfoParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the contact document info params
func (o *ContactDocumentInfoParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *ContactDocumentInfoParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.XDomainrobot2FAToken != nil {

		// header param X-Domainrobot-2FA-Token
		if err := r.SetHeaderParam("X-Domainrobot-2FA-Token", swag.FormatInt32(*o.XDomainrobot2FAToken)); err != nil {
			return err
		}
	}

	if o.XDomainrobotBulkLimit != nil {

		// header param X-Domainrobot-Bulk-Limit
		if err := r.SetHeaderParam("X-Domainrobot-Bulk-Limit", swag.FormatInt32(*o.XDomainrobotBulkLimit)); err != nil {
			return err
		}
	}

	if o.XDomainrobotContext != nil {

		// header param X-Domainrobot-Context
		if err := r.SetHeaderParam("X-Domainrobot-Context", swag.FormatInt32(*o.XDomainrobotContext)); err != nil {
			return err
		}
	}

	if o.XDomainrobotDemo != nil {

		// header param X-Domainrobot-Demo
		if err := r.SetHeaderParam("X-Domainrobot-Demo", swag.FormatBool(*o.XDomainrobotDemo)); err != nil {
			return err
		}
	}

	if o.XDomainrobotDomainSafePin != nil {

		// header param X-Domainrobot-Domain-Safe-Pin
		if err := r.SetHeaderParam("X-Domainrobot-Domain-Safe-Pin", *o.XDomainrobotDomainSafePin); err != nil {
			return err
		}
	}

	if o.XDomainrobotDomainSafeTan != nil {

		// header param X-Domainrobot-Domain-Safe-Tan
		if err := r.SetHeaderParam("X-Domainrobot-Domain-Safe-Tan", *o.XDomainrobotDomainSafeTan); err != nil {
			return err
		}
	}

	if o.XDomainrobotDomainSafeTransaction != nil {

		// header param X-Domainrobot-Domain-Safe-Transaction
		if err := r.SetHeaderParam("X-Domainrobot-Domain-Safe-Transaction", *o.XDomainrobotDomainSafeTransaction); err != nil {
			return err
		}
	}

	if o.XDomainrobotDomainSafeTransactionExpire != nil {

		// header param X-Domainrobot-Domain-Safe-Transaction-Expire
		if err := r.SetHeaderParam("X-Domainrobot-Domain-Safe-Transaction-Expire", o.XDomainrobotDomainSafeTransactionExpire.String()); err != nil {
			return err
		}
	}

	if o.XDomainrobotOwnerContext != nil {

		// header param X-Domainrobot-Owner-Context
		if err := r.SetHeaderParam("X-Domainrobot-Owner-Context", swag.FormatInt32(*o.XDomainrobotOwnerContext)); err != nil {
			return err
		}
	}

	if o.XDomainrobotOwnerUser != nil {

		// header param X-Domainrobot-Owner-User
		if err := r.SetHeaderParam("X-Domainrobot-Owner-User", *o.XDomainrobotOwnerUser); err != nil {
			return err
		}
	}

	if o.XDomainrobotSessionID != nil {

		// header param X-Domainrobot-SessionId
		if err := r.SetHeaderParam("X-Domainrobot-SessionId", *o.XDomainrobotSessionID); err != nil {
			return err
		}
	}

	if o.XDomainrobotWS != nil {

		// header param X-Domainrobot-WS
		if err := r.SetHeaderParam("X-Domainrobot-WS", *o.XDomainrobotWS); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", swag.FormatInt32(o.ID)); err != nil {
		return err
	}

	if o.Keys != nil {

		// binding items for keys
		joinedKeys := o.bindParamKeys(reg)

		// query array param keys
		if err := r.SetQueryParam("keys", joinedKeys...); err != nil {
			return err
		}
	}

	// path param type
	if err := r.SetPathParam("type", o.Type); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamContactDocumentInfo binds the parameter keys
func (o *ContactDocumentInfoParams) bindParamKeys(formats strfmt.Registry) []string {
	keysIR := o.Keys

	var keysIC []string
	for _, keysIIR := range keysIR { // explode []string

		keysIIV := keysIIR // string as string
		keysIC = append(keysIC, keysIIV)
	}

	// items.CollectionFormat: "multi"
	keysIS := swag.JoinByFormat(keysIC, "multi")

	return keysIS
}
