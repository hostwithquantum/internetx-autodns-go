// Code generated by go-swagger; DO NOT EDIT.

package tmch_mark_tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/hostwithquantum/internetx-autodns-go/models"
)

// NewTmchMarkDocumentInfoParams creates a new TmchMarkDocumentInfoParams object
// with the default values initialized.
func NewTmchMarkDocumentInfoParams() *TmchMarkDocumentInfoParams {
	var ()
	return &TmchMarkDocumentInfoParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewTmchMarkDocumentInfoParamsWithTimeout creates a new TmchMarkDocumentInfoParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewTmchMarkDocumentInfoParamsWithTimeout(timeout time.Duration) *TmchMarkDocumentInfoParams {
	var ()
	return &TmchMarkDocumentInfoParams{

		timeout: timeout,
	}
}

// NewTmchMarkDocumentInfoParamsWithContext creates a new TmchMarkDocumentInfoParams object
// with the default values initialized, and the ability to set a context for a request
func NewTmchMarkDocumentInfoParamsWithContext(ctx context.Context) *TmchMarkDocumentInfoParams {
	var ()
	return &TmchMarkDocumentInfoParams{

		Context: ctx,
	}
}

// NewTmchMarkDocumentInfoParamsWithHTTPClient creates a new TmchMarkDocumentInfoParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewTmchMarkDocumentInfoParamsWithHTTPClient(client *http.Client) *TmchMarkDocumentInfoParams {
	var ()
	return &TmchMarkDocumentInfoParams{
		HTTPClient: client,
	}
}

/*TmchMarkDocumentInfoParams contains all the parameters to send to the API endpoint
for the tmch mark document info operation typically these are written to a http.Request
*/
type TmchMarkDocumentInfoParams struct {

	/*Body
	  type

	*/
	Body models.DocumentTypeConstants
	/*Keys
	  The query parameter to enable generate a download link.

	*/
	Keys []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the tmch mark document info params
func (o *TmchMarkDocumentInfoParams) WithTimeout(timeout time.Duration) *TmchMarkDocumentInfoParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the tmch mark document info params
func (o *TmchMarkDocumentInfoParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the tmch mark document info params
func (o *TmchMarkDocumentInfoParams) WithContext(ctx context.Context) *TmchMarkDocumentInfoParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the tmch mark document info params
func (o *TmchMarkDocumentInfoParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the tmch mark document info params
func (o *TmchMarkDocumentInfoParams) WithHTTPClient(client *http.Client) *TmchMarkDocumentInfoParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the tmch mark document info params
func (o *TmchMarkDocumentInfoParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the tmch mark document info params
func (o *TmchMarkDocumentInfoParams) WithBody(body models.DocumentTypeConstants) *TmchMarkDocumentInfoParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the tmch mark document info params
func (o *TmchMarkDocumentInfoParams) SetBody(body models.DocumentTypeConstants) {
	o.Body = body
}

// WithKeys adds the keys to the tmch mark document info params
func (o *TmchMarkDocumentInfoParams) WithKeys(keys []string) *TmchMarkDocumentInfoParams {
	o.SetKeys(keys)
	return o
}

// SetKeys adds the keys to the tmch mark document info params
func (o *TmchMarkDocumentInfoParams) SetKeys(keys []string) {
	o.Keys = keys
}

// WriteToRequest writes these params to a swagger request
func (o *TmchMarkDocumentInfoParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	valuesKeys := o.Keys

	joinedKeys := swag.JoinByFormat(valuesKeys, "multi")
	// query array param keys
	if err := r.SetQueryParam("keys", joinedKeys...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
