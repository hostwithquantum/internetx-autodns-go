// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// UserLock user lock
//
// swagger:model UserLock
type UserLock string

const (

	// UserLockNONE captures enum value "NONE"
	UserLockNONE UserLock = "NONE"

	// UserLockCUSTOMER captures enum value "CUSTOMER"
	UserLockCUSTOMER UserLock = "CUSTOMER"

	// UserLockEXPIRED captures enum value "EXPIRED"
	UserLockEXPIRED UserLock = "EXPIRED"

	// UserLockUSER captures enum value "USER"
	UserLockUSER UserLock = "USER"
)

// for schema
var userLockEnum []interface{}

func init() {
	var res []UserLock
	if err := json.Unmarshal([]byte(`["NONE","CUSTOMER","EXPIRED","USER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		userLockEnum = append(userLockEnum, v)
	}
}

func (m UserLock) validateUserLockEnum(path, location string, value UserLock) error {
	if err := validate.EnumCase(path, location, value, userLockEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this user lock
func (m UserLock) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateUserLockEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
