// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AccountingDocumentTypeConstants accounting document type constants
//
// swagger:model AccountingDocumentTypeConstants
type AccountingDocumentTypeConstants string

const (

	// AccountingDocumentTypeConstantsINVOICE captures enum value "INVOICE"
	AccountingDocumentTypeConstantsINVOICE AccountingDocumentTypeConstants = "INVOICE"

	// AccountingDocumentTypeConstantsCREDIT captures enum value "CREDIT"
	AccountingDocumentTypeConstantsCREDIT AccountingDocumentTypeConstants = "CREDIT"

	// AccountingDocumentTypeConstantsREFUND captures enum value "REFUND"
	AccountingDocumentTypeConstantsREFUND AccountingDocumentTypeConstants = "REFUND"

	// AccountingDocumentTypeConstantsCANCELED captures enum value "CANCELED"
	AccountingDocumentTypeConstantsCANCELED AccountingDocumentTypeConstants = "CANCELED"

	// AccountingDocumentTypeConstantsCHARGE captures enum value "CHARGE"
	AccountingDocumentTypeConstantsCHARGE AccountingDocumentTypeConstants = "CHARGE"
)

// for schema
var accountingDocumentTypeConstantsEnum []interface{}

func init() {
	var res []AccountingDocumentTypeConstants
	if err := json.Unmarshal([]byte(`["INVOICE","CREDIT","REFUND","CANCELED","CHARGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		accountingDocumentTypeConstantsEnum = append(accountingDocumentTypeConstantsEnum, v)
	}
}

func (m AccountingDocumentTypeConstants) validateAccountingDocumentTypeConstantsEnum(path, location string, value AccountingDocumentTypeConstants) error {
	if err := validate.EnumCase(path, location, value, accountingDocumentTypeConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this accounting document type constants
func (m AccountingDocumentTypeConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAccountingDocumentTypeConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
