// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// SectigoHsmType sectigo hsm type
//
// swagger:model SectigoHsmType
type SectigoHsmType string

func NewSectigoHsmType(value SectigoHsmType) *SectigoHsmType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated SectigoHsmType.
func (m SectigoHsmType) Pointer() *SectigoHsmType {
	return &m
}

const (

	// SectigoHsmTypeYUBIKEY captures enum value "YUBIKEY"
	SectigoHsmTypeYUBIKEY SectigoHsmType = "YUBIKEY"

	// SectigoHsmTypeLUNA captures enum value "LUNA"
	SectigoHsmTypeLUNA SectigoHsmType = "LUNA"
)

// for schema
var sectigoHsmTypeEnum []interface{}

func init() {
	var res []SectigoHsmType
	if err := json.Unmarshal([]byte(`["YUBIKEY","LUNA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sectigoHsmTypeEnum = append(sectigoHsmTypeEnum, v)
	}
}

func (m SectigoHsmType) validateSectigoHsmTypeEnum(path, location string, value SectigoHsmType) error {
	if err := validate.EnumCase(path, location, value, sectigoHsmTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this sectigo hsm type
func (m SectigoHsmType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSectigoHsmTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this sectigo hsm type based on context it is used
func (m SectigoHsmType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
