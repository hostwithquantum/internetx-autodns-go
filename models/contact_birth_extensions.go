// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ContactBirthExtensions contact birth extensions
//
// swagger:model ContactBirthExtensions
type ContactBirthExtensions struct {

	// Birth country (ISO 3166 Country Code).
	// Example: DE
	Country string `json:"country,omitempty"`

	// Birthday (yyyy-MM-dd).
	// Example: 1987-10-04
	// Format: date
	Day strfmt.Date `json:"day,omitempty"`

	// Birth place.
	Place string `json:"place,omitempty"`

	// Postal code of the birth place.
	PostalCode string `json:"postalCode,omitempty"`
}

// Validate validates this contact birth extensions
func (m *ContactBirthExtensions) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDay(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ContactBirthExtensions) validateDay(formats strfmt.Registry) error {
	if swag.IsZero(m.Day) { // not required
		return nil
	}

	if err := validate.FormatOf("day", "body", "date", m.Day.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this contact birth extensions based on context it is used
func (m *ContactBirthExtensions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ContactBirthExtensions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContactBirthExtensions) UnmarshalBinary(b []byte) error {
	var res ContactBirthExtensions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
