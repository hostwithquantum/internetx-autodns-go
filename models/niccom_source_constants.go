// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// NiccomSourceConstants niccom source constants
//
// swagger:model NiccomSourceConstants
type NiccomSourceConstants string

const (

	// NiccomSourceConstantsNICREQUEST captures enum value "NIC_REQUEST"
	NiccomSourceConstantsNICREQUEST NiccomSourceConstants = "NIC_REQUEST"

	// NiccomSourceConstantsNICRESPONSE captures enum value "NIC_RESPONSE"
	NiccomSourceConstantsNICRESPONSE NiccomSourceConstants = "NIC_RESPONSE"

	// NiccomSourceConstantsNICNOTIFY captures enum value "NIC_NOTIFY"
	NiccomSourceConstantsNICNOTIFY NiccomSourceConstants = "NIC_NOTIFY"

	// NiccomSourceConstantsA3REQUEST captures enum value "A3_REQUEST"
	NiccomSourceConstantsA3REQUEST NiccomSourceConstants = "A3_REQUEST"

	// NiccomSourceConstantsA3RESPONSE captures enum value "A3_RESPONSE"
	NiccomSourceConstantsA3RESPONSE NiccomSourceConstants = "A3_RESPONSE"
)

// for schema
var niccomSourceConstantsEnum []interface{}

func init() {
	var res []NiccomSourceConstants
	if err := json.Unmarshal([]byte(`["NIC_REQUEST","NIC_RESPONSE","NIC_NOTIFY","A3_REQUEST","A3_RESPONSE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		niccomSourceConstantsEnum = append(niccomSourceConstantsEnum, v)
	}
}

func (m NiccomSourceConstants) validateNiccomSourceConstantsEnum(path, location string, value NiccomSourceConstants) error {
	if err := validate.EnumCase(path, location, value, niccomSourceConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this niccom source constants
func (m NiccomSourceConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateNiccomSourceConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
