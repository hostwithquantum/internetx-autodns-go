// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// BusinessCategory business category
//
// swagger:model BusinessCategory
type BusinessCategory string

const (

	// BusinessCategoryPRIVATEORGANIZATION captures enum value "PRIVATE_ORGANIZATION"
	BusinessCategoryPRIVATEORGANIZATION BusinessCategory = "PRIVATE_ORGANIZATION"

	// BusinessCategoryGOVERNMENTENTITY captures enum value "GOVERNMENT_ENTITY"
	BusinessCategoryGOVERNMENTENTITY BusinessCategory = "GOVERNMENT_ENTITY"

	// BusinessCategoryBUSINESSENTITY captures enum value "BUSINESS_ENTITY"
	BusinessCategoryBUSINESSENTITY BusinessCategory = "BUSINESS_ENTITY"
)

// for schema
var businessCategoryEnum []interface{}

func init() {
	var res []BusinessCategory
	if err := json.Unmarshal([]byte(`["PRIVATE_ORGANIZATION","GOVERNMENT_ENTITY","BUSINESS_ENTITY"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		businessCategoryEnum = append(businessCategoryEnum, v)
	}
}

func (m BusinessCategory) validateBusinessCategoryEnum(path, location string, value BusinessCategory) error {
	if err := validate.EnumCase(path, location, value, businessCategoryEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this business category
func (m BusinessCategory) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBusinessCategoryEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
