// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DocumentTypeConstants document type constants
//
// swagger:model DocumentTypeConstants
type DocumentTypeConstants string

func NewDocumentTypeConstants(value DocumentTypeConstants) *DocumentTypeConstants {
	return &value
}

// Pointer returns a pointer to a freshly-allocated DocumentTypeConstants.
func (m DocumentTypeConstants) Pointer() *DocumentTypeConstants {
	return &m
}

const (

	// DocumentTypeConstantsTMLICENSEEDECL captures enum value "TM_LICENSEE_DECL"
	DocumentTypeConstantsTMLICENSEEDECL DocumentTypeConstants = "TM_LICENSEE_DECL"

	// DocumentTypeConstantsTMASSIGNEEDECL captures enum value "TM_ASSIGNEE_DECL"
	DocumentTypeConstantsTMASSIGNEEDECL DocumentTypeConstants = "TM_ASSIGNEE_DECL"

	// DocumentTypeConstantsTMOTHER captures enum value "TM_OTHER"
	DocumentTypeConstantsTMOTHER DocumentTypeConstants = "TM_OTHER"

	// DocumentTypeConstantsDECLPROOFOFUSEONESAMPLE captures enum value "DECL_PROOF_OF_USE_ONE_SAMPLE"
	DocumentTypeConstantsDECLPROOFOFUSEONESAMPLE DocumentTypeConstants = "DECL_PROOF_OF_USE_ONE_SAMPLE"

	// DocumentTypeConstantsPROOFOFUSEOTHER captures enum value "PROOF_OF_USE_OTHER"
	DocumentTypeConstantsPROOFOFUSEOTHER DocumentTypeConstants = "PROOF_OF_USE_OTHER"

	// DocumentTypeConstantsCOPYOFCOURTORDER captures enum value "COPY_OF_COURT_ORDER"
	DocumentTypeConstantsCOPYOFCOURTORDER DocumentTypeConstants = "COPY_OF_COURT_ORDER"

	// DocumentTypeConstantsTMCHAGENTAUTHORISATIONFORM captures enum value "TMCH_AGENT_AUTHORISATION_FORM"
	DocumentTypeConstantsTMCHAGENTAUTHORISATIONFORM DocumentTypeConstants = "TMCH_AGENT_AUTHORISATION_FORM"

	// DocumentTypeConstantsTMOTHERCOPYOFTMCERTIFICATE captures enum value "TM_OTHER_COPY_OF_TM_CERTIFICATE"
	DocumentTypeConstantsTMOTHERCOPYOFTMCERTIFICATE DocumentTypeConstants = "TM_OTHER_COPY_OF_TM_CERTIFICATE"

	// DocumentTypeConstantsTMOTHERCOPYOFRENEWALREQUEST captures enum value "TM_OTHER_COPY_OF_RENEWAL_REQUEST"
	DocumentTypeConstantsTMOTHERCOPYOFRENEWALREQUEST DocumentTypeConstants = "TM_OTHER_COPY_OF_RENEWAL_REQUEST"

	// DocumentTypeConstantsTMOTHERCOPYOFTREATYORSTATUTE captures enum value "TM_OTHER_COPY_OF_TREATY_OR_STATUTE"
	DocumentTypeConstantsTMOTHERCOPYOFTREATYORSTATUTE DocumentTypeConstants = "TM_OTHER_COPY_OF_TREATY_OR_STATUTE"

	// DocumentTypeConstantsTMOTHERCOPYOFCERTIFICATE captures enum value "TM_OTHER_COPY_OF_CERTIFICATE"
	DocumentTypeConstantsTMOTHERCOPYOFCERTIFICATE DocumentTypeConstants = "TM_OTHER_COPY_OF_CERTIFICATE"
)

// for schema
var documentTypeConstantsEnum []interface{}

func init() {
	var res []DocumentTypeConstants
	if err := json.Unmarshal([]byte(`["TM_LICENSEE_DECL","TM_ASSIGNEE_DECL","TM_OTHER","DECL_PROOF_OF_USE_ONE_SAMPLE","PROOF_OF_USE_OTHER","COPY_OF_COURT_ORDER","TMCH_AGENT_AUTHORISATION_FORM","TM_OTHER_COPY_OF_TM_CERTIFICATE","TM_OTHER_COPY_OF_RENEWAL_REQUEST","TM_OTHER_COPY_OF_TREATY_OR_STATUTE","TM_OTHER_COPY_OF_CERTIFICATE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		documentTypeConstantsEnum = append(documentTypeConstantsEnum, v)
	}
}

func (m DocumentTypeConstants) validateDocumentTypeConstantsEnum(path, location string, value DocumentTypeConstants) error {
	if err := validate.EnumCase(path, location, value, documentTypeConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this document type constants
func (m DocumentTypeConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDocumentTypeConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this document type constants based on context it is used
func (m DocumentTypeConstants) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
