// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PriceRoundingConstants price rounding constants
//
// swagger:model PriceRoundingConstants
type PriceRoundingConstants string

func NewPriceRoundingConstants(value PriceRoundingConstants) *PriceRoundingConstants {
	return &value
}

// Pointer returns a pointer to a freshly-allocated PriceRoundingConstants.
func (m PriceRoundingConstants) Pointer() *PriceRoundingConstants {
	return &m
}

const (

	// PriceRoundingConstantsNONE captures enum value "NONE"
	PriceRoundingConstantsNONE PriceRoundingConstants = "NONE"

	// PriceRoundingConstantsROUNDX0 captures enum value "ROUND_X0"
	PriceRoundingConstantsROUNDX0 PriceRoundingConstants = "ROUND_X0"

	// PriceRoundingConstantsROUND00 captures enum value "ROUND_00"
	PriceRoundingConstantsROUND00 PriceRoundingConstants = "ROUND_00"

	// PriceRoundingConstantsROUNDX9 captures enum value "ROUND_X9"
	PriceRoundingConstantsROUNDX9 PriceRoundingConstants = "ROUND_X9"

	// PriceRoundingConstantsROUND99 captures enum value "ROUND_99"
	PriceRoundingConstantsROUND99 PriceRoundingConstants = "ROUND_99"

	// PriceRoundingConstantsROUNDCOMMERCIAL captures enum value "ROUND_COMMERCIAL"
	PriceRoundingConstantsROUNDCOMMERCIAL PriceRoundingConstants = "ROUND_COMMERCIAL"
)

// for schema
var priceRoundingConstantsEnum []interface{}

func init() {
	var res []PriceRoundingConstants
	if err := json.Unmarshal([]byte(`["NONE","ROUND_X0","ROUND_00","ROUND_X9","ROUND_99","ROUND_COMMERCIAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		priceRoundingConstantsEnum = append(priceRoundingConstantsEnum, v)
	}
}

func (m PriceRoundingConstants) validatePriceRoundingConstantsEnum(path, location string, value PriceRoundingConstants) error {
	if err := validate.EnumCase(path, location, value, priceRoundingConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this price rounding constants
func (m PriceRoundingConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePriceRoundingConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this price rounding constants based on context it is used
func (m PriceRoundingConstants) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
