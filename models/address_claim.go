// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AddressClaim address claim
//
// swagger:model address_claim
type AddressClaim struct {

	// Country name component
	Country string `json:"country,omitempty"`

	// Full mailing address, formatted for display or use on a mailing label. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return/line feed pair ("\r\n") or as a single line feed character ("\n")
	Formatted string `json:"formatted,omitempty"`

	// City or locality component
	Locality string `json:"locality,omitempty"`

	// Zip code or postal code component
	PostalCode string `json:"postal_code,omitempty"`

	// State, province, prefecture, or region component
	Region string `json:"region,omitempty"`

	// Full street address component, which MAY include house number, street name, Post Office Box, and multi-line extended street address information. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return/line feed pair ("\r\n") or as a single line feed character ("\n")
	StreetAddress string `json:"street_address,omitempty"`
}

// Validate validates this address claim
func (m *AddressClaim) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AddressClaim) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AddressClaim) UnmarshalBinary(b []byte) error {
	var res AddressClaim
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
