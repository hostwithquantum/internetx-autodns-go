// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AuEligibilityIDTypeConstants au eligibility Id type constants
//
// swagger:model AuEligibilityIdTypeConstants
type AuEligibilityIDTypeConstants string

const (

	// AuEligibilityIDTypeConstantsACN captures enum value "ACN"
	AuEligibilityIDTypeConstantsACN AuEligibilityIDTypeConstants = "ACN"

	// AuEligibilityIDTypeConstantsABN captures enum value "ABN"
	AuEligibilityIDTypeConstantsABN AuEligibilityIDTypeConstants = "ABN"

	// AuEligibilityIDTypeConstantsVICBN captures enum value "VIC_BN"
	AuEligibilityIDTypeConstantsVICBN AuEligibilityIDTypeConstants = "VIC_BN"

	// AuEligibilityIDTypeConstantsNSWBN captures enum value "NSW_BN"
	AuEligibilityIDTypeConstantsNSWBN AuEligibilityIDTypeConstants = "NSW_BN"

	// AuEligibilityIDTypeConstantsSA captures enum value "SA"
	AuEligibilityIDTypeConstantsSA AuEligibilityIDTypeConstants = "SA"

	// AuEligibilityIDTypeConstantsBN captures enum value "BN"
	AuEligibilityIDTypeConstantsBN AuEligibilityIDTypeConstants = "BN"

	// AuEligibilityIDTypeConstantsNTBN captures enum value "NT_BN"
	AuEligibilityIDTypeConstantsNTBN AuEligibilityIDTypeConstants = "NT_BN"

	// AuEligibilityIDTypeConstantsWABN captures enum value "WA_BN"
	AuEligibilityIDTypeConstantsWABN AuEligibilityIDTypeConstants = "WA_BN"

	// AuEligibilityIDTypeConstantsTASBN captures enum value "TAS_BN"
	AuEligibilityIDTypeConstantsTASBN AuEligibilityIDTypeConstants = "TAS_BN"

	// AuEligibilityIDTypeConstantsACTBN captures enum value "ACT_BN"
	AuEligibilityIDTypeConstantsACTBN AuEligibilityIDTypeConstants = "ACT_BN"

	// AuEligibilityIDTypeConstantsQLDBN captures enum value "QLD_BN"
	AuEligibilityIDTypeConstantsQLDBN AuEligibilityIDTypeConstants = "QLD_BN"

	// AuEligibilityIDTypeConstantsTM captures enum value "TM"
	AuEligibilityIDTypeConstantsTM AuEligibilityIDTypeConstants = "TM"

	// AuEligibilityIDTypeConstantsOTHER captures enum value "OTHER"
	AuEligibilityIDTypeConstantsOTHER AuEligibilityIDTypeConstants = "OTHER"
)

// for schema
var auEligibilityIdTypeConstantsEnum []interface{}

func init() {
	var res []AuEligibilityIDTypeConstants
	if err := json.Unmarshal([]byte(`["ACN","ABN","VIC_BN","NSW_BN","SA","BN","NT_BN","WA_BN","TAS_BN","ACT_BN","QLD_BN","TM","OTHER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		auEligibilityIdTypeConstantsEnum = append(auEligibilityIdTypeConstantsEnum, v)
	}
}

func (m AuEligibilityIDTypeConstants) validateAuEligibilityIDTypeConstantsEnum(path, location string, value AuEligibilityIDTypeConstants) error {
	if err := validate.EnumCase(path, location, value, auEligibilityIdTypeConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this au eligibility Id type constants
func (m AuEligibilityIDTypeConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAuEligibilityIDTypeConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
