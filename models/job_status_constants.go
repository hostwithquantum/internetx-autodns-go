// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// JobStatusConstants job status constants
//
// swagger:model JobStatusConstants
type JobStatusConstants string

const (

	// JobStatusConstantsRUNNING captures enum value "RUNNING"
	JobStatusConstantsRUNNING JobStatusConstants = "RUNNING"

	// JobStatusConstantsSUCCESS captures enum value "SUCCESS"
	JobStatusConstantsSUCCESS JobStatusConstants = "SUCCESS"

	// JobStatusConstantsFAILED captures enum value "FAILED"
	JobStatusConstantsFAILED JobStatusConstants = "FAILED"

	// JobStatusConstantsCANCELED captures enum value "CANCELED"
	JobStatusConstantsCANCELED JobStatusConstants = "CANCELED"

	// JobStatusConstantsSUPPORT captures enum value "SUPPORT"
	JobStatusConstantsSUPPORT JobStatusConstants = "SUPPORT"

	// JobStatusConstantsDEFERRED captures enum value "DEFERRED"
	JobStatusConstantsDEFERRED JobStatusConstants = "DEFERRED"

	// JobStatusConstantsNOTSET captures enum value "NOT_SET"
	JobStatusConstantsNOTSET JobStatusConstants = "NOT_SET"

	// JobStatusConstantsWAIT captures enum value "WAIT"
	JobStatusConstantsWAIT JobStatusConstants = "WAIT"
)

// for schema
var jobStatusConstantsEnum []interface{}

func init() {
	var res []JobStatusConstants
	if err := json.Unmarshal([]byte(`["RUNNING","SUCCESS","FAILED","CANCELED","SUPPORT","DEFERRED","NOT_SET","WAIT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		jobStatusConstantsEnum = append(jobStatusConstantsEnum, v)
	}
}

func (m JobStatusConstants) validateJobStatusConstantsEnum(path, location string, value JobStatusConstants) error {
	if err := validate.EnumCase(path, location, value, jobStatusConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this job status constants
func (m JobStatusConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateJobStatusConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
