// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AuEligibilityTypeConstants au eligibility type constants
//
// swagger:model AuEligibilityTypeConstants
type AuEligibilityTypeConstants string

const (

	// AuEligibilityTypeConstantsCOMPANY captures enum value "COMPANY"
	AuEligibilityTypeConstantsCOMPANY AuEligibilityTypeConstants = "COMPANY"

	// AuEligibilityTypeConstantsREGISTEREDBUSINESS captures enum value "REGISTERED_BUSINESS"
	AuEligibilityTypeConstantsREGISTEREDBUSINESS AuEligibilityTypeConstants = "REGISTERED_BUSINESS"

	// AuEligibilityTypeConstantsSOLETRADER captures enum value "SOLE_TRADER"
	AuEligibilityTypeConstantsSOLETRADER AuEligibilityTypeConstants = "SOLE_TRADER"

	// AuEligibilityTypeConstantsPARTNERSHIP captures enum value "PARTNERSHIP"
	AuEligibilityTypeConstantsPARTNERSHIP AuEligibilityTypeConstants = "PARTNERSHIP"

	// AuEligibilityTypeConstantsTRADEMARKOWNER captures enum value "TRADEMARK_OWNER"
	AuEligibilityTypeConstantsTRADEMARKOWNER AuEligibilityTypeConstants = "TRADEMARK_OWNER"

	// AuEligibilityTypeConstantsPENDINGTMOWNER captures enum value "PENDING_TM_OWNER"
	AuEligibilityTypeConstantsPENDINGTMOWNER AuEligibilityTypeConstants = "PENDING_TM_OWNER"

	// AuEligibilityTypeConstantsCITIZENRESIDENT captures enum value "CITIZEN_RESIDENT"
	AuEligibilityTypeConstantsCITIZENRESIDENT AuEligibilityTypeConstants = "CITIZEN_RESIDENT"

	// AuEligibilityTypeConstantsINCORPORATEDASSOCIATION captures enum value "INCORPORATED_ASSOCIATION"
	AuEligibilityTypeConstantsINCORPORATEDASSOCIATION AuEligibilityTypeConstants = "INCORPORATED_ASSOCIATION"

	// AuEligibilityTypeConstantsUNINCORPORATEDASSOCIATION captures enum value "UNINCORPORATED_ASSOCIATION"
	AuEligibilityTypeConstantsUNINCORPORATEDASSOCIATION AuEligibilityTypeConstants = "UNINCORPORATED_ASSOCIATION"

	// AuEligibilityTypeConstantsCLUB captures enum value "CLUB"
	AuEligibilityTypeConstantsCLUB AuEligibilityTypeConstants = "CLUB"

	// AuEligibilityTypeConstantsNONPROFITORGANISATION captures enum value "NON_PROFIT_ORGANISATION"
	AuEligibilityTypeConstantsNONPROFITORGANISATION AuEligibilityTypeConstants = "NON_PROFIT_ORGANISATION"

	// AuEligibilityTypeConstantsCHARITY captures enum value "CHARITY"
	AuEligibilityTypeConstantsCHARITY AuEligibilityTypeConstants = "CHARITY"

	// AuEligibilityTypeConstantsTRADEUNION captures enum value "TRADE_UNION"
	AuEligibilityTypeConstantsTRADEUNION AuEligibilityTypeConstants = "TRADE_UNION"

	// AuEligibilityTypeConstantsINDUSTRYBODY captures enum value "INDUSTRY_BODY"
	AuEligibilityTypeConstantsINDUSTRYBODY AuEligibilityTypeConstants = "INDUSTRY_BODY"

	// AuEligibilityTypeConstantsCOMMERCIALSTATUTORYBODY captures enum value "COMMERCIAL_STATUTORY_BODY"
	AuEligibilityTypeConstantsCOMMERCIALSTATUTORYBODY AuEligibilityTypeConstants = "COMMERCIAL_STATUTORY_BODY"

	// AuEligibilityTypeConstantsPOLITICALPARTY captures enum value "POLITICAL_PARTY"
	AuEligibilityTypeConstantsPOLITICALPARTY AuEligibilityTypeConstants = "POLITICAL_PARTY"

	// AuEligibilityTypeConstantsRELIGIOUSCHURCHGROUPS captures enum value "RELIGIOUS_CHURCH_GROUPS"
	AuEligibilityTypeConstantsRELIGIOUSCHURCHGROUPS AuEligibilityTypeConstants = "RELIGIOUS_CHURCH_GROUPS"

	// AuEligibilityTypeConstantsOTHER captures enum value "OTHER"
	AuEligibilityTypeConstantsOTHER AuEligibilityTypeConstants = "OTHER"
)

// for schema
var auEligibilityTypeConstantsEnum []interface{}

func init() {
	var res []AuEligibilityTypeConstants
	if err := json.Unmarshal([]byte(`["COMPANY","REGISTERED_BUSINESS","SOLE_TRADER","PARTNERSHIP","TRADEMARK_OWNER","PENDING_TM_OWNER","CITIZEN_RESIDENT","INCORPORATED_ASSOCIATION","UNINCORPORATED_ASSOCIATION","CLUB","NON_PROFIT_ORGANISATION","CHARITY","TRADE_UNION","INDUSTRY_BODY","COMMERCIAL_STATUTORY_BODY","POLITICAL_PARTY","RELIGIOUS_CHURCH_GROUPS","OTHER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		auEligibilityTypeConstantsEnum = append(auEligibilityTypeConstantsEnum, v)
	}
}

func (m AuEligibilityTypeConstants) validateAuEligibilityTypeConstantsEnum(path, location string, value AuEligibilityTypeConstants) error {
	if err := validate.EnumCase(path, location, value, auEligibilityTypeConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this au eligibility type constants
func (m AuEligibilityTypeConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAuEligibilityTypeConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
