// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// RoPersonTypeConstants ro person type constants
//
// swagger:model RoPersonTypeConstants
type RoPersonTypeConstants string

func NewRoPersonTypeConstants(value RoPersonTypeConstants) *RoPersonTypeConstants {
	return &value
}

// Pointer returns a pointer to a freshly-allocated RoPersonTypeConstants.
func (m RoPersonTypeConstants) Pointer() *RoPersonTypeConstants {
	return &m
}

const (

	// RoPersonTypeConstantsP captures enum value "P"
	RoPersonTypeConstantsP RoPersonTypeConstants = "P"

	// RoPersonTypeConstantsAP captures enum value "AP"
	RoPersonTypeConstantsAP RoPersonTypeConstants = "AP"

	// RoPersonTypeConstantsNC captures enum value "NC"
	RoPersonTypeConstantsNC RoPersonTypeConstants = "NC"

	// RoPersonTypeConstantsC captures enum value "C"
	RoPersonTypeConstantsC RoPersonTypeConstants = "C"

	// RoPersonTypeConstantsGI captures enum value "GI"
	RoPersonTypeConstantsGI RoPersonTypeConstants = "GI"

	// RoPersonTypeConstantsPI captures enum value "PI"
	RoPersonTypeConstantsPI RoPersonTypeConstants = "PI"

	// RoPersonTypeConstantsO captures enum value "O"
	RoPersonTypeConstantsO RoPersonTypeConstants = "O"
)

// for schema
var roPersonTypeConstantsEnum []interface{}

func init() {
	var res []RoPersonTypeConstants
	if err := json.Unmarshal([]byte(`["P","AP","NC","C","GI","PI","O"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		roPersonTypeConstantsEnum = append(roPersonTypeConstantsEnum, v)
	}
}

func (m RoPersonTypeConstants) validateRoPersonTypeConstantsEnum(path, location string, value RoPersonTypeConstants) error {
	if err := validate.EnumCase(path, location, value, roPersonTypeConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this ro person type constants
func (m RoPersonTypeConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRoPersonTypeConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this ro person type constants based on context it is used
func (m RoPersonTypeConstants) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
