// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ContactIeExtensions contact ie extensions
//
// swagger:model ContactIeExtensions
type ContactIeExtensions struct {

	// Describes the connection to Ireland that is eligible for domain registration.
	//  Possible values:
	//  Company - for Irish companies with CRO number
	//  Charity - is not supported by us
	//  Other - person or organization without CRO number
	ContactType string `json:"contactType,omitempty"`

	// Can be an EU trademark number or an Irish RBN. Needed for other person or organization of type OTH (Other).
	//  For type COM (Commercial) the company number from the general contact details is used.
	SupportingNumber string `json:"supportingNumber,omitempty"`
}

// Validate validates this contact ie extensions
func (m *ContactIeExtensions) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this contact ie extensions based on context it is used
func (m *ContactIeExtensions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ContactIeExtensions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ContactIeExtensions) UnmarshalBinary(b []byte) error {
	var res ContactIeExtensions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
