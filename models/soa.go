// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// Soa soa
//
// swagger:model Soa
type Soa struct {

	// The email address of the Zone Contact
	Email string `json:"email,omitempty"`

	// Number of seconds after which secondary name servers
	// should stop answering request for this zone if the master does not respond.
	// This value must be bigger than the sum of Refresh and Retry.
	Expire int64 `json:"expire,omitempty"`

	// Number of seconds after which secondary name servers should query the master for the SOA record, to detect zone changes
	Refresh int64 `json:"refresh,omitempty"`

	// Number of seconds after which secondary name servers should retry to request the serial number from the master
	// if the master does not respond. It must be less than Refresh.
	Retry int64 `json:"retry,omitempty"`

	// Time-to-live default value of the Resource Record of a zone
	// Example: false = Check is performed\n false
	TTL int64 `json:"ttl,omitempty"`
}

// Validate validates this soa
func (m *Soa) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this soa based on context it is used
func (m *Soa) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Soa) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Soa) UnmarshalBinary(b []byte) error {
	var res Soa
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
