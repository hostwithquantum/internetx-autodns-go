// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DomainPreregStatusConstants domain prereg status constants
//
// swagger:model DomainPreregStatusConstants
type DomainPreregStatusConstants string

func NewDomainPreregStatusConstants(value DomainPreregStatusConstants) *DomainPreregStatusConstants {
	return &value
}

// Pointer returns a pointer to a freshly-allocated DomainPreregStatusConstants.
func (m DomainPreregStatusConstants) Pointer() *DomainPreregStatusConstants {
	return &m
}

const (

	// DomainPreregStatusConstantsPENDING captures enum value "PENDING"
	DomainPreregStatusConstantsPENDING DomainPreregStatusConstants = "PENDING"

	// DomainPreregStatusConstantsPENDINGSENT captures enum value "PENDING_SENT"
	DomainPreregStatusConstantsPENDINGSENT DomainPreregStatusConstants = "PENDING_SENT"

	// DomainPreregStatusConstantsPENDINGDOCUMENTSENT captures enum value "PENDING_DOCUMENT_SENT"
	DomainPreregStatusConstantsPENDINGDOCUMENTSENT DomainPreregStatusConstants = "PENDING_DOCUMENT_SENT"

	// DomainPreregStatusConstantsPENDINGPROGRESS captures enum value "PENDING_PROGRESS"
	DomainPreregStatusConstantsPENDINGPROGRESS DomainPreregStatusConstants = "PENDING_PROGRESS"

	// DomainPreregStatusConstantsPENDINGUPDATE captures enum value "PENDING_UPDATE"
	DomainPreregStatusConstantsPENDINGUPDATE DomainPreregStatusConstants = "PENDING_UPDATE"

	// DomainPreregStatusConstantsPENDINGSENTUPDATE captures enum value "PENDING_SENT_UPDATE"
	DomainPreregStatusConstantsPENDINGSENTUPDATE DomainPreregStatusConstants = "PENDING_SENT_UPDATE"

	// DomainPreregStatusConstantsTIMEOUT captures enum value "TIMEOUT"
	DomainPreregStatusConstantsTIMEOUT DomainPreregStatusConstants = "TIMEOUT"

	// DomainPreregStatusConstantsACCEPT captures enum value "ACCEPT"
	DomainPreregStatusConstantsACCEPT DomainPreregStatusConstants = "ACCEPT"

	// DomainPreregStatusConstantsDECLINE captures enum value "DECLINE"
	DomainPreregStatusConstantsDECLINE DomainPreregStatusConstants = "DECLINE"

	// DomainPreregStatusConstantsINVALIDNAME captures enum value "INVALID_NAME"
	DomainPreregStatusConstantsINVALIDNAME DomainPreregStatusConstants = "INVALID_NAME"

	// DomainPreregStatusConstantsFAILED captures enum value "FAILED"
	DomainPreregStatusConstantsFAILED DomainPreregStatusConstants = "FAILED"

	// DomainPreregStatusConstantsCANCEL captures enum value "CANCEL"
	DomainPreregStatusConstantsCANCEL DomainPreregStatusConstants = "CANCEL"

	// DomainPreregStatusConstantsAUTOCANCEL captures enum value "AUTO_CANCEL"
	DomainPreregStatusConstantsAUTOCANCEL DomainPreregStatusConstants = "AUTO_CANCEL"

	// DomainPreregStatusConstantsACTIVE captures enum value "ACTIVE"
	DomainPreregStatusConstantsACTIVE DomainPreregStatusConstants = "ACTIVE"

	// DomainPreregStatusConstantsSENT captures enum value "SENT"
	DomainPreregStatusConstantsSENT DomainPreregStatusConstants = "SENT"

	// DomainPreregStatusConstantsOPEN captures enum value "OPEN"
	DomainPreregStatusConstantsOPEN DomainPreregStatusConstants = "OPEN"

	// DomainPreregStatusConstantsTMCHCLAIM captures enum value "TMCH_CLAIM"
	DomainPreregStatusConstantsTMCHCLAIM DomainPreregStatusConstants = "TMCH_CLAIM"

	// DomainPreregStatusConstantsTMCHCLAIMCONFIRMED captures enum value "TMCH_CLAIM_CONFIRMED"
	DomainPreregStatusConstantsTMCHCLAIMCONFIRMED DomainPreregStatusConstants = "TMCH_CLAIM_CONFIRMED"

	// DomainPreregStatusConstantsTMCHCLAIMREJECTED captures enum value "TMCH_CLAIM_REJECTED"
	DomainPreregStatusConstantsTMCHCLAIMREJECTED DomainPreregStatusConstants = "TMCH_CLAIM_REJECTED"

	// DomainPreregStatusConstantsTMCHCLAIMEXPIRED captures enum value "TMCH_CLAIM_EXPIRED"
	DomainPreregStatusConstantsTMCHCLAIMEXPIRED DomainPreregStatusConstants = "TMCH_CLAIM_EXPIRED"

	// DomainPreregStatusConstantsTMCHCLAIMPENDING captures enum value "TMCH_CLAIM_PENDING"
	DomainPreregStatusConstantsTMCHCLAIMPENDING DomainPreregStatusConstants = "TMCH_CLAIM_PENDING"

	// DomainPreregStatusConstantsTMCHCLAIMFAILED captures enum value "TMCH_CLAIM_FAILED"
	DomainPreregStatusConstantsTMCHCLAIMFAILED DomainPreregStatusConstants = "TMCH_CLAIM_FAILED"

	// DomainPreregStatusConstantsFAILEDREF captures enum value "FAILED_REF"
	DomainPreregStatusConstantsFAILEDREF DomainPreregStatusConstants = "FAILED_REF"
)

// for schema
var domainPreregStatusConstantsEnum []interface{}

func init() {
	var res []DomainPreregStatusConstants
	if err := json.Unmarshal([]byte(`["PENDING","PENDING_SENT","PENDING_DOCUMENT_SENT","PENDING_PROGRESS","PENDING_UPDATE","PENDING_SENT_UPDATE","TIMEOUT","ACCEPT","DECLINE","INVALID_NAME","FAILED","CANCEL","AUTO_CANCEL","ACTIVE","SENT","OPEN","TMCH_CLAIM","TMCH_CLAIM_CONFIRMED","TMCH_CLAIM_REJECTED","TMCH_CLAIM_EXPIRED","TMCH_CLAIM_PENDING","TMCH_CLAIM_FAILED","FAILED_REF"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		domainPreregStatusConstantsEnum = append(domainPreregStatusConstantsEnum, v)
	}
}

func (m DomainPreregStatusConstants) validateDomainPreregStatusConstantsEnum(path, location string, value DomainPreregStatusConstants) error {
	if err := validate.EnumCase(path, location, value, domainPreregStatusConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this domain prereg status constants
func (m DomainPreregStatusConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDomainPreregStatusConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this domain prereg status constants based on context it is used
func (m DomainPreregStatusConstants) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
