// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AuthMethodConstants auth method constants
//
// swagger:model AuthMethodConstants
type AuthMethodConstants string

func NewAuthMethodConstants(value AuthMethodConstants) *AuthMethodConstants {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AuthMethodConstants.
func (m AuthMethodConstants) Pointer() *AuthMethodConstants {
	return &m
}

const (

	// AuthMethodConstantsDNS captures enum value "DNS"
	AuthMethodConstantsDNS AuthMethodConstants = "DNS"

	// AuthMethodConstantsEMAIL captures enum value "EMAIL"
	AuthMethodConstantsEMAIL AuthMethodConstants = "EMAIL"

	// AuthMethodConstantsFILE captures enum value "FILE"
	AuthMethodConstantsFILE AuthMethodConstants = "FILE"

	// AuthMethodConstantsORG captures enum value "ORG"
	AuthMethodConstantsORG AuthMethodConstants = "ORG"
)

// for schema
var authMethodConstantsEnum []interface{}

func init() {
	var res []AuthMethodConstants
	if err := json.Unmarshal([]byte(`["DNS","EMAIL","FILE","ORG"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		authMethodConstantsEnum = append(authMethodConstantsEnum, v)
	}
}

func (m AuthMethodConstants) validateAuthMethodConstantsEnum(path, location string, value AuthMethodConstants) error {
	if err := validate.EnumCase(path, location, value, authMethodConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this auth method constants
func (m AuthMethodConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAuthMethodConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this auth method constants based on context it is used
func (m AuthMethodConstants) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
