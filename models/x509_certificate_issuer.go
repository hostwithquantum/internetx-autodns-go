// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// X509CertificateIssuer x509 certificate issuer
//
// swagger:model X509CertificateIssuer
type X509CertificateIssuer struct {

	// The CN attribute of the issuer
	CommonName string `json:"commonName,omitempty"`

	// The C attribute of the issuer
	Country string `json:"country,omitempty"`

	// The L attribute of the issuer
	Locality string `json:"locality,omitempty"`

	// The O attribute of the issuer
	Organization string `json:"organization,omitempty"`

	// The OU attribute of the issuer
	OrganizationUnit string `json:"organizationUnit,omitempty"`

	// The ST attribute of the issuer
	State string `json:"state,omitempty"`
}

// Validate validates this x509 certificate issuer
func (m *X509CertificateIssuer) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this x509 certificate issuer based on context it is used
func (m *X509CertificateIssuer) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *X509CertificateIssuer) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *X509CertificateIssuer) UnmarshalBinary(b []byte) error {
	var res X509CertificateIssuer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
