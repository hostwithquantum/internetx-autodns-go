// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PriceTypeConstants price type constants
//
// swagger:model PriceTypeConstants
type PriceTypeConstants string

func NewPriceTypeConstants(value PriceTypeConstants) *PriceTypeConstants {
	return &value
}

// Pointer returns a pointer to a freshly-allocated PriceTypeConstants.
func (m PriceTypeConstants) Pointer() *PriceTypeConstants {
	return &m
}

const (

	// PriceTypeConstantsGROSS captures enum value "GROSS"
	PriceTypeConstantsGROSS PriceTypeConstants = "GROSS"

	// PriceTypeConstantsNET captures enum value "NET"
	PriceTypeConstantsNET PriceTypeConstants = "NET"
)

// for schema
var priceTypeConstantsEnum []interface{}

func init() {
	var res []PriceTypeConstants
	if err := json.Unmarshal([]byte(`["GROSS","NET"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		priceTypeConstantsEnum = append(priceTypeConstantsEnum, v)
	}
}

func (m PriceTypeConstants) validatePriceTypeConstantsEnum(path, location string, value PriceTypeConstants) error {
	if err := validate.EnumCase(path, location, value, priceTypeConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this price type constants
func (m PriceTypeConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePriceTypeConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this price type constants based on context it is used
func (m PriceTypeConstants) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
