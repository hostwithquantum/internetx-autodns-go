// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// RelativeConstants relative constants
//
// swagger:model RelativeConstants
type RelativeConstants string

func NewRelativeConstants(value RelativeConstants) *RelativeConstants {
	return &value
}

// Pointer returns a pointer to a freshly-allocated RelativeConstants.
func (m RelativeConstants) Pointer() *RelativeConstants {
	return &m
}

const (

	// RelativeConstantsFIX captures enum value "FIX"
	RelativeConstantsFIX RelativeConstants = "FIX"

	// RelativeConstantsRELATIVEPERCENT captures enum value "RELATIVE_PERCENT"
	RelativeConstantsRELATIVEPERCENT RelativeConstants = "RELATIVE_PERCENT"

	// RelativeConstantsRELATIVEAMOUNT captures enum value "RELATIVE_AMOUNT"
	RelativeConstantsRELATIVEAMOUNT RelativeConstants = "RELATIVE_AMOUNT"

	// RelativeConstantsDELETE captures enum value "DELETE"
	RelativeConstantsDELETE RelativeConstants = "DELETE"

	// RelativeConstantsREPLACE captures enum value "REPLACE"
	RelativeConstantsREPLACE RelativeConstants = "REPLACE"
)

// for schema
var relativeConstantsEnum []interface{}

func init() {
	var res []RelativeConstants
	if err := json.Unmarshal([]byte(`["FIX","RELATIVE_PERCENT","RELATIVE_AMOUNT","DELETE","REPLACE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		relativeConstantsEnum = append(relativeConstantsEnum, v)
	}
}

func (m RelativeConstants) validateRelativeConstantsEnum(path, location string, value RelativeConstants) error {
	if err := validate.EnumCase(path, location, value, relativeConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this relative constants
func (m RelativeConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRelativeConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this relative constants based on context it is used
func (m RelativeConstants) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
