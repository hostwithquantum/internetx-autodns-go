// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DomainParkingExtensions domain parking extensions
//
// swagger:model DomainParkingExtensions
type DomainParkingExtensions struct {

	// The currency of the sale
	// Example: EUR
	Currency string `json:"currency,omitempty"`

	// The parking
	DomainLanguage string `json:"domainLanguage,omitempty"`

	// Is the price fix
	FixedPrice bool `json:"fixedPrice,omitempty"`

	// Should the domain be listed for sale
	ForSale bool `json:"forSale,omitempty"`

	// The keywords to use
	Keyword string `json:"keyword,omitempty"`

	// The minimum of price
	MinPrice float64 `json:"minPrice,omitempty"`

	// parking category
	ParkingCategory string `json:"parkingCategory,omitempty"`

	// The price to use
	Price float64 `json:"price,omitempty"`
}

// Validate validates this domain parking extensions
func (m *DomainParkingExtensions) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this domain parking extensions based on context it is used
func (m *DomainParkingExtensions) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DomainParkingExtensions) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DomainParkingExtensions) UnmarshalBinary(b []byte) error {
	var res DomainParkingExtensions
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
