// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DeliveryStatus delivery status
//
// swagger:model DeliveryStatus
type DeliveryStatus string

const (

	// DeliveryStatusPENDING captures enum value "PENDING"
	DeliveryStatusPENDING DeliveryStatus = "PENDING"

	// DeliveryStatusSUCCESS captures enum value "SUCCESS"
	DeliveryStatusSUCCESS DeliveryStatus = "SUCCESS"

	// DeliveryStatusFAILED captures enum value "FAILED"
	DeliveryStatusFAILED DeliveryStatus = "FAILED"

	// DeliveryStatusEXPIRED captures enum value "EXPIRED"
	DeliveryStatusEXPIRED DeliveryStatus = "EXPIRED"

	// DeliveryStatusATTEMPTING captures enum value "ATTEMPTING"
	DeliveryStatusATTEMPTING DeliveryStatus = "ATTEMPTING"

	// DeliveryStatusPARTIAL captures enum value "PARTIAL"
	DeliveryStatusPARTIAL DeliveryStatus = "PARTIAL"
)

// for schema
var deliveryStatusEnum []interface{}

func init() {
	var res []DeliveryStatus
	if err := json.Unmarshal([]byte(`["PENDING","SUCCESS","FAILED","EXPIRED","ATTEMPTING","PARTIAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deliveryStatusEnum = append(deliveryStatusEnum, v)
	}
}

func (m DeliveryStatus) validateDeliveryStatusEnum(path, location string, value DeliveryStatus) error {
	if err := validate.EnumCase(path, location, value, deliveryStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this delivery status
func (m DeliveryStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDeliveryStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
