// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// SocialMediaPlatform social media platform
//
// swagger:model SocialMediaPlatform
type SocialMediaPlatform string

func NewSocialMediaPlatform(value SocialMediaPlatform) *SocialMediaPlatform {
	return &value
}

// Pointer returns a pointer to a freshly-allocated SocialMediaPlatform.
func (m SocialMediaPlatform) Pointer() *SocialMediaPlatform {
	return &m
}

const (

	// SocialMediaPlatformFACEBOOK captures enum value "FACEBOOK"
	SocialMediaPlatformFACEBOOK SocialMediaPlatform = "FACEBOOK"

	// SocialMediaPlatformTWITTER captures enum value "TWITTER"
	SocialMediaPlatformTWITTER SocialMediaPlatform = "TWITTER"

	// SocialMediaPlatformPINTEREST captures enum value "PINTEREST"
	SocialMediaPlatformPINTEREST SocialMediaPlatform = "PINTEREST"

	// SocialMediaPlatformYOUTUBE captures enum value "YOUTUBE"
	SocialMediaPlatformYOUTUBE SocialMediaPlatform = "YOUTUBE"

	// SocialMediaPlatformTIKTOK captures enum value "TIKTOK"
	SocialMediaPlatformTIKTOK SocialMediaPlatform = "TIKTOK"

	// SocialMediaPlatformGITHUB captures enum value "GITHUB"
	SocialMediaPlatformGITHUB SocialMediaPlatform = "GITHUB"

	// SocialMediaPlatformTWITCH captures enum value "TWITCH"
	SocialMediaPlatformTWITCH SocialMediaPlatform = "TWITCH"

	// SocialMediaPlatformVIMEO captures enum value "VIMEO"
	SocialMediaPlatformVIMEO SocialMediaPlatform = "VIMEO"

	// SocialMediaPlatformVK captures enum value "VK"
	SocialMediaPlatformVK SocialMediaPlatform = "VK"
)

// for schema
var socialMediaPlatformEnum []interface{}

func init() {
	var res []SocialMediaPlatform
	if err := json.Unmarshal([]byte(`["FACEBOOK","TWITTER","PINTEREST","YOUTUBE","TIKTOK","GITHUB","TWITCH","VIMEO","VK"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		socialMediaPlatformEnum = append(socialMediaPlatformEnum, v)
	}
}

func (m SocialMediaPlatform) validateSocialMediaPlatformEnum(path, location string, value SocialMediaPlatform) error {
	if err := validate.EnumCase(path, location, value, socialMediaPlatformEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this social media platform
func (m SocialMediaPlatform) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSocialMediaPlatformEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this social media platform based on context it is used
func (m SocialMediaPlatform) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
