// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// AuRegistrantIDTypeConstants au registrant Id type constants
//
// swagger:model AuRegistrantIdTypeConstants
type AuRegistrantIDTypeConstants string

func NewAuRegistrantIDTypeConstants(value AuRegistrantIDTypeConstants) *AuRegistrantIDTypeConstants {
	return &value
}

// Pointer returns a pointer to a freshly-allocated AuRegistrantIDTypeConstants.
func (m AuRegistrantIDTypeConstants) Pointer() *AuRegistrantIDTypeConstants {
	return &m
}

const (

	// AuRegistrantIDTypeConstantsACN captures enum value "ACN"
	AuRegistrantIDTypeConstantsACN AuRegistrantIDTypeConstants = "ACN"

	// AuRegistrantIDTypeConstantsABN captures enum value "ABN"
	AuRegistrantIDTypeConstantsABN AuRegistrantIDTypeConstants = "ABN"

	// AuRegistrantIDTypeConstantsOTHER captures enum value "OTHER"
	AuRegistrantIDTypeConstantsOTHER AuRegistrantIDTypeConstants = "OTHER"

	// AuRegistrantIDTypeConstantsTAS captures enum value "TAS"
	AuRegistrantIDTypeConstantsTAS AuRegistrantIDTypeConstants = "TAS"

	// AuRegistrantIDTypeConstantsVIC captures enum value "VIC"
	AuRegistrantIDTypeConstantsVIC AuRegistrantIDTypeConstants = "VIC"

	// AuRegistrantIDTypeConstantsNSW captures enum value "NSW"
	AuRegistrantIDTypeConstantsNSW AuRegistrantIDTypeConstants = "NSW"

	// AuRegistrantIDTypeConstantsACT captures enum value "ACT"
	AuRegistrantIDTypeConstantsACT AuRegistrantIDTypeConstants = "ACT"

	// AuRegistrantIDTypeConstantsQLD captures enum value "QLD"
	AuRegistrantIDTypeConstantsQLD AuRegistrantIDTypeConstants = "QLD"

	// AuRegistrantIDTypeConstantsNT captures enum value "NT"
	AuRegistrantIDTypeConstantsNT AuRegistrantIDTypeConstants = "NT"

	// AuRegistrantIDTypeConstantsWA captures enum value "WA"
	AuRegistrantIDTypeConstantsWA AuRegistrantIDTypeConstants = "WA"

	// AuRegistrantIDTypeConstantsSA captures enum value "SA"
	AuRegistrantIDTypeConstantsSA AuRegistrantIDTypeConstants = "SA"

	// AuRegistrantIDTypeConstantsTM captures enum value "TM"
	AuRegistrantIDTypeConstantsTM AuRegistrantIDTypeConstants = "TM"

	// AuRegistrantIDTypeConstantsARBN captures enum value "ARBN"
	AuRegistrantIDTypeConstantsARBN AuRegistrantIDTypeConstants = "ARBN"

	// AuRegistrantIDTypeConstantsICN captures enum value "ICN"
	AuRegistrantIDTypeConstantsICN AuRegistrantIDTypeConstants = "ICN"
)

// for schema
var auRegistrantIdTypeConstantsEnum []interface{}

func init() {
	var res []AuRegistrantIDTypeConstants
	if err := json.Unmarshal([]byte(`["ACN","ABN","OTHER","TAS","VIC","NSW","ACT","QLD","NT","WA","SA","TM","ARBN","ICN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		auRegistrantIdTypeConstantsEnum = append(auRegistrantIdTypeConstantsEnum, v)
	}
}

func (m AuRegistrantIDTypeConstants) validateAuRegistrantIDTypeConstantsEnum(path, location string, value AuRegistrantIDTypeConstants) error {
	if err := validate.EnumCase(path, location, value, auRegistrantIdTypeConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this au registrant Id type constants
func (m AuRegistrantIDTypeConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAuRegistrantIDTypeConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this au registrant Id type constants based on context it is used
func (m AuRegistrantIDTypeConstants) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
