// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// CsrHashAlgorithmConstants csr hash algorithm constants
//
// swagger:model CsrHashAlgorithmConstants
type CsrHashAlgorithmConstants string

const (

	// CsrHashAlgorithmConstantsECC captures enum value "ECC"
	CsrHashAlgorithmConstantsECC CsrHashAlgorithmConstants = "ECC"

	// CsrHashAlgorithmConstantsRSA captures enum value "RSA"
	CsrHashAlgorithmConstantsRSA CsrHashAlgorithmConstants = "RSA"

	// CsrHashAlgorithmConstantsDSA captures enum value "DSA"
	CsrHashAlgorithmConstantsDSA CsrHashAlgorithmConstants = "DSA"
)

// for schema
var csrHashAlgorithmConstantsEnum []interface{}

func init() {
	var res []CsrHashAlgorithmConstants
	if err := json.Unmarshal([]byte(`["ECC","RSA","DSA"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		csrHashAlgorithmConstantsEnum = append(csrHashAlgorithmConstantsEnum, v)
	}
}

func (m CsrHashAlgorithmConstants) validateCsrHashAlgorithmConstantsEnum(path, location string, value CsrHashAlgorithmConstants) error {
	if err := validate.EnumCase(path, location, value, csrHashAlgorithmConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this csr hash algorithm constants
func (m CsrHashAlgorithmConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateCsrHashAlgorithmConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
