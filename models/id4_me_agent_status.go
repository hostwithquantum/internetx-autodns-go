// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// Id4MeAgentStatus id4 me agent status
//
// swagger:model Id4MeAgentStatus
type Id4MeAgentStatus string

const (

	// Id4MeAgentStatusPENDING captures enum value "PENDING"
	Id4MeAgentStatusPENDING Id4MeAgentStatus = "PENDING"

	// Id4MeAgentStatusPENDINGSSL captures enum value "PENDING_SSL"
	Id4MeAgentStatusPENDINGSSL Id4MeAgentStatus = "PENDING_SSL"

	// Id4MeAgentStatusPENDINGSSLVERIFY captures enum value "PENDING_SSL_VERIFY"
	Id4MeAgentStatusPENDINGSSLVERIFY Id4MeAgentStatus = "PENDING_SSL_VERIFY"

	// Id4MeAgentStatusSUCCESS captures enum value "SUCCESS"
	Id4MeAgentStatusSUCCESS Id4MeAgentStatus = "SUCCESS"

	// Id4MeAgentStatusFAILED captures enum value "FAILED"
	Id4MeAgentStatusFAILED Id4MeAgentStatus = "FAILED"
)

// for schema
var id4MeAgentStatusEnum []interface{}

func init() {
	var res []Id4MeAgentStatus
	if err := json.Unmarshal([]byte(`["PENDING","PENDING_SSL","PENDING_SSL_VERIFY","SUCCESS","FAILED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		id4MeAgentStatusEnum = append(id4MeAgentStatusEnum, v)
	}
}

func (m Id4MeAgentStatus) validateId4MeAgentStatusEnum(path, location string, value Id4MeAgentStatus) error {
	if err := validate.EnumCase(path, location, value, id4MeAgentStatusEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this id4 me agent status
func (m Id4MeAgentStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateId4MeAgentStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
