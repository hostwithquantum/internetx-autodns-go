// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// RegistrationTypeConstants registration type constants
//
// swagger:model RegistrationTypeConstants
type RegistrationTypeConstants string

const (

	// RegistrationTypeConstantsFCFS captures enum value "FCFS"
	RegistrationTypeConstantsFCFS RegistrationTypeConstants = "FCFS"

	// RegistrationTypeConstantsAPPLICATION captures enum value "APPLICATION"
	RegistrationTypeConstantsAPPLICATION RegistrationTypeConstants = "APPLICATION"

	// RegistrationTypeConstantsOTHER captures enum value "OTHER"
	RegistrationTypeConstantsOTHER RegistrationTypeConstants = "OTHER"
)

// for schema
var registrationTypeConstantsEnum []interface{}

func init() {
	var res []RegistrationTypeConstants
	if err := json.Unmarshal([]byte(`["FCFS","APPLICATION","OTHER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		registrationTypeConstantsEnum = append(registrationTypeConstantsEnum, v)
	}
}

func (m RegistrationTypeConstants) validateRegistrationTypeConstantsEnum(path, location string, value RegistrationTypeConstants) error {
	if err := validate.EnumCase(path, location, value, registrationTypeConstantsEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this registration type constants
func (m RegistrationTypeConstants) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRegistrationTypeConstantsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
